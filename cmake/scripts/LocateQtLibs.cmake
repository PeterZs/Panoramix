# set Qt_INCLUDES, Qt_LIBS, Qt_PATHS
message (STATUS "Qt directory: ${Qt_DIR}")
list (APPEND CMAKE_PREFIX_PATH ${Qt_DIR}/lib/cmake)
set (Qt_PATH ${Qt_DIR}/bin)
set (BUILD_UI on CACHE BOOL "Whether to build the Visualizer Module")
if (${BUILD_UI})
	# set cmake library paths for windows, this is required by Qt OpenGL
	if (WIN32)
		if (CMAKE_CL_64)
			set (WindowsSDK_LIBRARY_PATH "C:\\Program Files (x86)\\Windows Kits\\8.0\\Lib\\win8\\um\\x64" 
				CACHE PATH "Directory to Windows Kits Libraries")
		else ()
			set (WindowsSDK_LIBRARY_PATH "C:\\Program Files (x86)\\Windows Kits\\8.0\\Lib\\win8\\um\\x86"
				CACHE PATH "Directory to Windows Kits Libraries")
		endif ()
		list (APPEND CMAKE_LIBRARY_PATH ${WindowsSDK_LIBRARY_PATH})
	endif ()
	set (Qt_INCLUDES "")
	set (Qt_LIBS "")
	set (Qt_DEFINITIONS "")
	set (Qt_COMPILE_DEFINITIONS "")
	set (Qt_EXECUTABLE_COMPILE_FLAGS "")
	foreach(_M ${Qt_MODULES_REQUIRED})
		set (M "Qt5${_M}")
		find_package (${M})
		if (${M}_FOUND)
			message (STATUS "${M} is found")
			list (APPEND Qt_INCLUDES ${${M}_INCLUDE_DIRS})
			list (APPEND Qt_LIBS ${${M}_LIBRARIES})
			list (APPEND Qt_DEFINITIONS ${${M}_DEFINITIONS})
			list (APPEND Qt_COMPILE_DEFINITIONS ${${M}_COMPILE_DEFINITIONS})
			list (APPEND Qt_EXECUTABLE_COMPILE_FLAGS ${${M}_EXECUTABLE_COMPILE_FLAGS})
		else ()
			set (BUILD_UI off)
		endif ()
	endforeach()
	if (Qt5_POSITION_INDEPENDENT_CODE)
  		set(CMAKE_POSITION_INDEPENDENT_CODE ON)
	endif()
	foreach (i ${Qt_INCLUDES})
		message (STATUS "qt includes: " ${i})
	endforeach ()
	foreach (i ${Qt_LIBS})
		message (STATUS "qt libs: " ${i})
	endforeach ()
endif ()